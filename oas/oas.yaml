openapi: 3.0.0
paths:
  /api/digitacion/v1/observations:
    post:
      operationId: ObservationController_create
      summary: Create observations for events/exceptions
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateObservationDto"
      responses:
        "201":
          description: The observation has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Observation"
        "400":
          description: Bad Request
      tags:
        &a1
        - Observations
    get:
      operationId: ObservationController_getObservations
      summary: Get observations by an array of events/exceptions codes
      parameters:
        - name: eventsExceptions
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successfully received observations
        "400":
          description: Bad Request
      tags: *a1
info:
  title: Digitaci√≥n Hub Mobile
  description: Backend microservice to get predefined observations
  version: "1.0"
  contact: {}
  license:
    name: Blue Express
    url: https://www.blue.cl
tags: []
servers:
  - url: http://localhost:3001
    description: Local Environment
  - url: https://devapigw.bluex.cl
    description: Develop Environment
  - url: https://qaapigw.bluex.cl
    description: QA - Environment
  - url: https://apigw.bluex.cl
    description: Production Environment
components:
  schemas:
    CreateObservationDto:
      type: object
      properties:
        eventException:
          type: string
          description: Provide event exception code
          example: AC
        observations:
          description: Provide observations
          example:
            - observation 1
          type: array
          items:
            type: string
      required:
        - eventException
        - observations
    Observation:
      type: object
      properties: {}
